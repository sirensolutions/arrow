import { org } from './Schema';
// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
org.apache = org.apache || {};

/**
 * @const
 * @namespace
 */
org.apache.arrow = org.apache.arrow || {};

/**
 * @const
 * @namespace
 */
org.apache.arrow.flatbuf = org.apache.arrow.flatbuf || {};

/**
 * ----------------------------------------------------------------------
 * Arrow File metadata
 *
 *
 * @constructor
 */
org.apache.arrow.flatbuf.Footer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.apache.arrow.flatbuf.Footer}
 */
org.apache.arrow.flatbuf.Footer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.apache.arrow.flatbuf.Footer=} obj
 * @returns {org.apache.arrow.flatbuf.Footer}
 */
org.apache.arrow.flatbuf.Footer.getRootAsFooter = function(bb, obj) {
  return (obj || new org.apache.arrow.flatbuf.Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {org.apache.arrow.flatbuf.MetadataVersion}
 */
org.apache.arrow.flatbuf.Footer.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {org.apache.arrow.flatbuf.MetadataVersion} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MetadataVersion.V1;
};

/**
 * @param {org.apache.arrow.flatbuf.Schema=} obj
 * @returns {org.apache.arrow.flatbuf.Schema|null}
 */
org.apache.arrow.flatbuf.Footer.prototype.schema = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new org.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @param {org.apache.arrow.flatbuf.Block=} obj
 * @returns {org.apache.arrow.flatbuf.Block}
 */
org.apache.arrow.flatbuf.Footer.prototype.dictionaries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;
};

/**
 * @returns {number}
 */
org.apache.arrow.flatbuf.Footer.prototype.dictionariesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {org.apache.arrow.flatbuf.Block=} obj
 * @returns {org.apache.arrow.flatbuf.Block}
 */
org.apache.arrow.flatbuf.Footer.prototype.recordBatches = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;
};

/**
 * @returns {number}
 */
org.apache.arrow.flatbuf.Footer.prototype.recordBatchesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.apache.arrow.flatbuf.Footer.startFooter = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {org.apache.arrow.flatbuf.MetadataVersion} version
 */
org.apache.arrow.flatbuf.Footer.addVersion = function(builder, version) {
  builder.addFieldInt16(0, version, org.apache.arrow.flatbuf.MetadataVersion.V1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} schemaOffset
 */
org.apache.arrow.flatbuf.Footer.addSchema = function(builder, schemaOffset) {
  builder.addFieldOffset(1, schemaOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dictionariesOffset
 */
org.apache.arrow.flatbuf.Footer.addDictionaries = function(builder, dictionariesOffset) {
  builder.addFieldOffset(2, dictionariesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
org.apache.arrow.flatbuf.Footer.startDictionariesVector = function(builder, numElems) {
  builder.startVector(24, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} recordBatchesOffset
 */
org.apache.arrow.flatbuf.Footer.addRecordBatches = function(builder, recordBatchesOffset) {
  builder.addFieldOffset(3, recordBatchesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
org.apache.arrow.flatbuf.Footer.startRecordBatchesVector = function(builder, numElems) {
  builder.startVector(24, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.apache.arrow.flatbuf.Footer.endFooter = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
org.apache.arrow.flatbuf.Footer.finishFooterBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @constructor
 */
org.apache.arrow.flatbuf.Block = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.apache.arrow.flatbuf.Block}
 */
org.apache.arrow.flatbuf.Block.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * Index to the start of the RecordBlock (note this is past the Message header)
 *
 * @returns {flatbuffers.Long}
 */
org.apache.arrow.flatbuf.Block.prototype.offset = function() {
  return this.bb.readInt64(this.bb_pos);
};

/**
 * Length of the metadata
 *
 * @returns {number}
 */
org.apache.arrow.flatbuf.Block.prototype.metaDataLength = function() {
  return this.bb.readInt32(this.bb_pos + 8);
};

/**
 * Length of the data (this is aligned so there can be a gap between this and
 * the metatdata).
 *
 * @returns {flatbuffers.Long}
 */
org.apache.arrow.flatbuf.Block.prototype.bodyLength = function() {
  return this.bb.readInt64(this.bb_pos + 16);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} offset
 * @param {number} metaDataLength
 * @param {flatbuffers.Long} bodyLength
 * @returns {flatbuffers.Offset}
 */
org.apache.arrow.flatbuf.Block.createBlock = function(builder, offset, metaDataLength, bodyLength) {
  builder.prep(8, 24);
  builder.writeInt64(bodyLength);
  builder.pad(4);
  builder.writeInt32(metaDataLength);
  builder.writeInt64(offset);
  return builder.offset();
};
export { org };

