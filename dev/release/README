requirements:
- being a committer to be able to push to dist and maven repository
- a gpg key to sign the artifacts
- use java 7. check your JAVA_HOME environment variable (at least for now. See ARROW-930)
- have the build requirements for cpp and c_glibg installed (see their README)

to release, run the following (replace 0.1.0 with version to release):

#create a release branch
git co -b release-0_1_0
#setup gpg agent for signing artifacts
source dev/release/setup-gpg-agent.sh

# prepare release v 0.1.0 (run tests, sign artifacts). Next version will be 0.1.1-SNAPSHOT
sh dev/release/00-prepare.sh 0.1.0 0.1.1
# push the tag
git push apache apache-arrow-0.1.0
# tag and stage artifacts to maven repo (repo will have to be finalized separately)
sh dev/release/01-perform.sh
# create the source release
sh dev/release/02-source.sh 0.1.0 0
# once the vote has passed, publish the staged maven artifacts (see bellow)

useful commands:
- to set the mvn version in the poms
mvn versions:set -DnewVersion=0.1-SNAPSHOT
- reset your workspace
git reset --hard
- setup gpg agent
eval $(gpg-agent --daemon --allow-preset-passphrase)
gpg --use-agent -s LICENSE.txt
- delete tag localy
git tag -d apache-arrow-0.1.0

How to stage maven artifacts:
artifacts get staged during the perform phase of the scripts above.
If you need to stage the artifacts again follow the instructions bellow:
# checkout the relese tag
git checkout apache-arrow-0.1.0
# setup the gpg agent for signing artifacts
source dev/release/setup-gpg-agent.sh
# go in the java subfolder
cd java
# stage the artifacts
mvn -Papache-release deploy

How to publish the staged artifacts:
Logon to the apache repository: https://repository.apache.org/#stagingRepositories
Select the arrow staging repository you just just created: orgapachearrow-100x
Click the "close" button
Once validation has passed, click the "release" button

# Releasing JavaScript

* Make release branch then tag the release

git checkout -b release-js-X.Y.Z
git tag -a apache-arrow-js-X.Y.Z

* Build the source release (requires NodeJS)

dev/release/js-source-release.sh X.Y.Z $RC_NUM

* After release vote push tag, and rebase master on release branch